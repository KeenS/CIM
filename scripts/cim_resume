#!/bin/sh -
# This file is for execute
set -x
cim_resume_rm(){
    status=0
    for resume in "$@";do
	if [ -f "$CIM_HOME/res/resume-$resume" ];then
	    rm "$CIM_HOME/res/resume-$resume"
	else
	    echo "Unknown resume $resume." >&2
	    status=`expr $status + 1`
	fi
    done
    exit $status
}

cim_resume_resume(){
    . "$CIM_HOME/scripts/cim_install_impl_lib"
    IN_RESUME=1
    if [ "$#" -gt 0 ];then
	while [ -s "$CIM_HOME/tmp/resume-$1" ]; do
	    resume="$1"
	    set -- `__cim_split_impl_version ${resume#resume-}`
	    for proc in `cat "$resume"`; do
		eval $proc "$@" && [ -s "$CIM_HOME/tmp/resume-$1-$2" ] && sed -i -e "/$proc/d" "$CIM_HOME/tmp/resume-$1-$2" ||
		exit 1
	    done

	    shift
	done
    else
	for resume in `find $CIM_HOME/tmp/ -name "resume-*"`; do
	    base_resume=`basename "$resume"`
	    set -- `__cim_split_impl_version "${base_resume#resume-}"`
	    for proc in `cat "$resume"`; do
		eval $proc "$@" && [ -s "$CIM_HOME/tmp/resume-$1-$2" ] && sed -i -e "/$proc/d" "$CIM_HOME/tmp/resume-$1-$2" ||
		exit 1
	    done
	done
    fi
}

command=$1
shift
case "$command" in
    rm) [ -n "$1" ] && cim_resume_rm "$@";;
    resume) cim_resume_resume "$@";;
    *) echo "Unknown subcommand '$1'. See 'cim help resume'" >&2 && return 1;;
esac
