#!/bin/sh -
# This file is for load

. "$CIM_HOME/scripts/cim_utils"

__get_download_path(){
    case "$1" in
	clisp)
	    echo "http://ftp.gnu.org/pub/gnu/clisp/release/$2/clisp-$2.tar.gz"
	    ;;
	gcl)
	    echo "ftp://ftp.gnu.org/pub/gnu/gcl/gcl-$2.tar.gz"
	    ;;
	ecl)
	    echo "http://downloads.sourceforge.net/project/ecls/ecls/${2%.*}/ecl-${2}.tgz"
	    ;;
	abcl)
	    echo "http://abcl.org/releases/$2/abcl-bin-$2.tar.gz"
	    ;;
	sbcl)
	    echo "http://downloads.sourceforge.net/project/sbcl/sbcl/$2/sbcl-$2-source.tar.bz2"
	    ;;
	sbcl-bin)
	    {
		grep "`uname`\\s`uname -m`" "$CIM_HOME/res/sbcl-bin_url" ||
		{ echo "SBCL binary does not support your machine." >&2;return 1;}
	    } | cut -f 3
	    ;;
	ccl)
	    case "`uname -m`" in
		x86*)
		    echo "ftp://ftp.clozure.com/pub/release/$2/ccl-$2-`uname | tr A-Z a-z`x86.tar.gz"
		    ;;
		arm)
		    [ "`uname`" = "Linux" ] &&
		    echo "ftp://ftp.clozure.com/pub/release/$2/ccl-$2-linuxx86.tar.gz"
		    ;;
		ppc)
		    [ "`uname`" = "Linux" ] &&
		    echo "ftp://ftp.clozure.com/pub/release/$2/ccl-$2-linuxppc.tar.gz"
		    ;;
		*)
		    echo "CCL does not support your machine." >&2
		    return 1
		    ;;
	    esac
	    ;;
	alisp)
	    if expr match `uname -m` 'x86*' > /dev/null 2>&1 ; then
		vname=`echo "$2" | tr -d \.`
		case `uname` in
		    Linux)
			echo "http://www.franz.com/ftp/pub/acl${vname}express/linux86/acl${vname}express-linux-x86.bz2"
			;;
		    Darwin)
			echo "http://www.franz.com/ftp/pub/acl${vname}express/macosx86/acl${vname}express-macosx-x86.dmg"
			;;
		    FreeBSD)
			echo "http://www.franz.com/ftp/pub/acl${vname}express/freebsd/acl${vname}express-freebsd-x86.bz2"
			;;
		esac
	    fi
	    return 1
	    ;;
	*)
	    echo "$1 is not supported" >&2;
	    return 1
	    ;;
    esac
}

__start(){
    if [ -d "$CIM_HOME/impls/$1-$2" ];then
	echo "It seems you have installed $1-$2. Did you mean 'cim reinstall $1-$2'?." >&2
	return 1
    fi
    if [ -f "$CIM_HOME/tmp/$1-$v2.lock" ];then
	echo "You have been already running $1-$2 installation." >&2
	return 1
    fi
    trap "exit 1" HUP INT PIPE QUIT TERM
    trap "rm -f $CIM_HOME/tmp/$1-$2.lock" EXIT
    mkdir -p "$CIM_HOME/tmp/"
    touch "$CIM_HOME/tmp/$1-$2.lock"

}
__download(){
    if [ "$1" = "sbcl" ] || [ "$1" = "alisp" ];then
	impl_archive="$CIM_HOME/archives/$1-$2.tar.bz2"
    else
	impl_archive="$CIM_HOME/archives/$1-$2.tar.gz"
    fi
    url=`__get_download_path "$1" "$2"`
    mkdir -p "$CIM_HOME/archives/"
    {   [ -f "$impl_archive" ] ||
	{ [ -n "$url" ] && __cim_wget "$url" "$impl_archive"; }
    } || {
	echo "Failed to Donwload. Exit" >&2
	exit 1
    }
}
__expand(){
    rm -rf  "$CIM_HOME/src/$1-$2"
    if [ "$1" = "sbcl" ] || [ "$1" = "alisp" ];then
	dist="$1-$2.tar.bz2"
	zip="bzip2"
    else
	dist="$1-$2.tar.gz"
	zip="gzip"
    fi
    mkdir -p "$CIM_HOME/src"
    $zip -dc "$CIM_HOME/archives/$dist" | tar -xf - -C "$CIM_HOME/src"
    if [ "$1" = gcl ] || [ "$1" = ccl ];then
	mv "$CIM_HOME/src/$1" "$CIM_HOME/src/$1-$2"
    fi
    return 0
}
__configure(){
    [ -n "$IN_RESUME" ] && rm -f "$CIM_HOME/src/$1-$2/src/confg.cache"
    [ "$1" = "gcl" ] && flags="$flags --enable-ansi --mandir=$CIM_HOME/share/man"
    [ "$1" = "ecl" ] && flags="$flags --mandir=$CIM_HOME/share/man"
    [ "$1" = "clisp" ] && flags="$flags --mandir=$CIM_HOME/share/man"
    
    (cd "$CIM_HOME/src/$1-$2" && ./configure --prefix="$CIM_HOME/impls/$1-$2" $flags)
}
__make(){
    if [ "$1" = "clisp" ]; then
	(cd "$CIM_HOME/src/$1-$2/src" && make)
    else
	(cd "$CIM_HOME/src/$1-$2" && make)
    fi
}

__doc(){
    mkdir -p "$CIM_HOME/share/man"
    if [ "$1" = "sbcl" ] ;then
	(cd "$CIM_HOME/src/$1-$2/doc/manual" && make)
    fi
}

__install(){
    mkdir -p "$CIM_HOME/impls/$1-$2" &&
    if [ "$1" = "clisp" ]; then
	(cd "$CIM_HOME/src/$1-$2/src" && make install)
    else
	(cd "$CIM_HOME/src/$1-$2" && make install)
    fi
}
__link(){
    rm -f  "$CIM_HOME/bin/$1-$2"
    ln -s "$CIM_HOME/impls/$1-$2/bin/$1" "$CIM_HOME/bin/$1-$2"
    [ -e "$CIM_HOME/bin/$1" ] || ln -s "$CIM_HOME/bin/$1-$2" "$CIM_HOME/bin/$1"
}
__install_ql_if_need(){
    if [ ! -d "$CIM_HOME/quicklisp/" ];then
	rm -f "$CIM_HOME/quicklisp"
	rm -f "$CIM_HOME/tmp/quicklisp.lisp"
	__cim_wget "http://beta.quicklisp.org/quicklisp.lisp" "$CIM_HOME/tmp/quicklisp.lisp"
	echo "(quicklisp-quickstart:install :path #p\"$CIM_HOME/quicklisp/\")" >> "$CIM_HOME/tmp/quicklisp.lisp"
	echo "(ql:add-to-init-file #p\"$HOME/.lisprc\"" >> "$CIM_HOME/tmp/quicklisp.lisp"
	cl -Q "$CIM_HOME/tmp/quicklisp.lisp"
    fi
}

cim_install_sbcl_ensure_impl(){
    if which sbcl > /dev/null 2>&1;then
	touch "$CIM_HOME/src/$1-$2/.cim_available_impl"
    elif which lisp > /dev/null 2>&1;then
	echo "lisp -batch" > "$CIM_HOME/src/$1-$2/.cim_available_impl"
    elif which ccl > /dev/null 2>&1;then
	echo "ccl --batch" > "$CIM_HOME/src/$1-$2/.cim_available_impl"
    elif which clisp > /dev/null 2>&1;then
	echo "clisp -batch" > "$CIM_HOME/src/$1-$2/.cim_available_impl"
    elif [ -n run_sbcl=`find $CIM_HOME/tmp/ -maxdepth 2 -name run-sbcl.sh | head -n 1` ];then
	echo "$CIM_HOME/tmp/$run_sbcl --disable-debugger --no-userinit --no-sysinit" > "$CIM_HOME/src/$1-$2/.cim_available_impl"
    elif url=`__cim_get_download_path sbcl-bin`;then
	__cim_wget "$url" - | bzip2 -dc - | tar -xf - -C "$CIM_HOME/tmp/" &&
	echo "`find $CIM_HOME/tmp/ -maxdepth 2 -name run-sbcl.sh` --disable-debugger --no-userinit --no-sysinit" |
	head -n 1 > "$CIM_HOME/src/$1-$2/.cim_available_impl"
    else
	echo "No CL implementation for compiling SBCL found. Please install another implementation first." >&2
	exit 1
    fi
	
}
cim_install_sbcl_make(){
    (cd "$CIM_HOME/src/$1-$2" &&
	sh make.sh `cat .cim_available_impl` --prefix="$CIM_HOME/impls/$1-$2 --fancy")
}
cim_install_sbcl_install(){
    (cd "$CIM_HOME/src/$1-$2" && sh install.sh)
}

cim_install_ccl_rebuild_full(){
    logic="!"
    if uname -m | grep 64;then
	logic=
    fi
    executable=`find "$CIM_HOME/src/$1-$2/" -maxdepth 1 -executable "!" -type d $logic -name '*64'` ||
    return 1
    "$executable" --no-init --eval '(rebuild-ccl :full t)' --eval '(quit)'
}
cim_install_ccl_install(){
    cp -R "$CIM_HOME/src/$1-$2" "$CIM_HOME/impls/$1-$2"
    find "$CIM_HOME/impls/$1-$2/scripts/" -maxdepth 1 -name 'ccl*' \
	-exec sed -i "/CCL_DEFAULT_DIRECTORY=/ s;=/.*\$;=\"$CIM_HOME/impls/$1-$2\";" '{}' ';'
    mkdir -p "$CIM_HOME/impls/$1-$2/bin"
    if uname -m | grep 64;then
	ln -s  "$CIM_HOME/impls/$1-$2/scripts/ccl64" "$CIM_HOME/impls/$1-$2/bin/$1"
    else
	ln -s  "$CIM_HOME/impls/$1-$2/scripts/ccl" "$CIM_HOME/impls/$1-$2/bin/$1"
    fi    
}

cim_install_abcl_install(){
    cp -R "$CIM_HOME/src/$1-bin-$2" "$CIM_HOME/impls/$1-$2"
    mkdir -p  "$CIM_HOME/impls/$1-$2/bin"
    cat<<EOF > "$CIM_HOME/impls/$1-$2/bin/abcl"
#!/bin/sh
java -classpath $CIM_HOME/impls/$1-$2/abcl-contrib.jar \\
 -server -Xrs \\
 -jar $CIM_HOME/impls/$1-$2/abcl.jar "\$@"
EOF
    chmod u+x "$CIM_HOME/impls/$1-$2/bin/abcl"
}

cim_install_alisp_install(){
    vname=`echo "$2" | tr -d \.`
    mkdir -p "$CIM_HOME/impls/"
    cp -R "$CIM_HOME/src/acl${vname}express" "$CIM_HOME/impls/$1-$2"
    ln -s "$CIM_HOME/impls/$1-$2/alisp" "$CIM_HOME/impls/$1-$2/bin/alisp"
}
